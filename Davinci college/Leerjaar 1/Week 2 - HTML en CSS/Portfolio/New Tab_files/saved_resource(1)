(function(){ if(typeof window.AdGlare == 'undefined') { window.AdGlare = { _head: document.head || document.getElementsByTagName('head')[0] || document.documentElement, _zonerefresh: [], _winID: Math.round(Math.random()*100000), _crIDsLoaded: [], _cIDsLoaded: [], _pIDsLoaded: [], _queue: [], _queueStatus: 0, _queueTimer: null, getCookie: function(cname) { try { var name = cname + '='; var ca = document.cookie; if(!ca) return ''; if(ca.indexOf(name)==-1) return ''; ca = document.cookie.split(';'); for(var i = 0; i < ca.length; i++) { var c = ca[i]; while(c.charAt(0) == ' ') c = c.substring(1); if(c.indexOf(name) == 0) return c.substring(name.length, c.length); } } catch(e) {} return ''; }, getCookieMacros: function() { try { if(!window.AdGlareBase64) return ''; var cookiemacros_keys = '#'; if(cookiemacros_keys=='#' || cookiemacros_keys=='') return ''; var keys = cookiemacros_keys.split('#'); var kws = {}; var atleastone = false; for(i in keys) { if(keys[i]=='') continue; var l = AdGlareBase64.decode(keys[i]); var c = AdGlare.getCookie(l); if(c=='') if(window[l]) c = window[l]; if(c!='') { if(typeof c == 'number' || typeof c == 'boolean') {} else if(typeof c == 'string') {c = c.substring(0,500);} else continue; kws[l] = c+''; atleastone = true; } } if(atleastone==false) return ''; return(encodeURIComponent(AdGlareBase64.encode(JSON.stringify(kws)))); } catch(e) {} return ''; }, getKVPairs: function() { try { if(!window.AdGlareBase64) return ''; var keyvaluetargeting_keys = '#'; if(keyvaluetargeting_keys=='#' || keyvaluetargeting_keys=='') return ''; var keys = keyvaluetargeting_keys.split('#'); var kws = {}; var atleastone = false; for(i in keys) { if(keys[i]=='') continue; var f = null; var l = AdGlareBase64.decode(keys[i]); var c = AdGlare.getCookie(l); var v = window[l]; if(v!==undefined) f = v; else if(c!='') f = c; if(f!=null) { if(typeof f == 'number' || typeof f == 'boolean') {} else if(typeof f == 'string') {f = f.toLowerCase().substring(0,40);} else continue; kws[l] = f+''; atleastone = true; } } if(atleastone==false) return ''; return(encodeURIComponent(AdGlareBase64.encode(JSON.stringify(kws)))); } catch(e) {} return ''; }, safeFrameGeo: function(dim) { try { if(!window.$sf) return false; if(dim=='w') return window.$sf.ext.geom().self.w; if(dim=='h') return window.$sf.ext.geom().self.h; } catch(e) {return false;} }, loadJS: function(url) { var bc = Math.round(Math.random()*10) + 3; var r = ''; try {r = encodeURIComponent( top.location.href || window.location.href || document.location.href );} catch(e) {r = 'https%3A%2F%2Fwww.worldoftravel.co%2Fnew-tab%2Fturkey%2F';} var screen = ''; try {screen = ((window.devicePixelRatio * window.screen.width) || window.screen.width) + 'x' + ((window.devicePixelRatio * window.screen.height) || window.screen.height);} catch(e) {} var availscreen = ''; try {availscreen = (this.safeFrameGeo('w') || window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth) + 'x' + (this.safeFrameGeo('h') || window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight);} catch(e) {} var framed = AdGlare.inIframe() ? 1 : 0; var caps = ''; if(typeof window.AdGlareCaps != 'undefined') caps = AdGlareCaps.getCaps(); var kvpairs = AdGlare.getKVPairs(); var haskvpairs = (kvpairs!='') ? 1 : 0; var add = '&bc=' + bc + '&haskvpairs=' + haskvpairs + '&winID=' + AdGlare._winID + '&screen=' + screen + '&availscreen=' + availscreen + '&framed=' + framed + '&vb=' + AdGlare.VBMeasurable() + '&crIDsLoaded=' + AdGlare._crIDsLoaded.join('-') + '&cIDsLoaded=' + AdGlare._cIDsLoaded.join('-') + '&pIDsLoaded=' + AdGlare._pIDsLoaded.join('-') + '&referer=' + r + '&caps=' + caps + '&kvpairs=' + kvpairs + '&cm=' + AdGlare.getCookieMacros(); var s = document.createElement('script'); s.type = 'text/javascript'; s.async = true; s.src = url + add; AdGlare._head.appendChild(s); }, loadQueue: function(url) { AdGlare._queue.push(url); AdGlare.continueQueue(); }, nextQueue: function() { window.clearTimeout(AdGlare._queueTimer); AdGlare._queueStatus = 0; AdGlare.continueQueue(); }, continueQueue: function() { if(AdGlare._queueStatus != 0 || AdGlare._queue.length == 0) return; AdGlare._queueStatus = 1; AdGlare.loadJS(AdGlare._queue.shift()); }, addCSS: function(css) { if(css=='') return; var c = document.createElement('style'); c.type = 'text/css'; c.innerHTML = css; AdGlare._head.appendChild(c); }, loadPixel: function (url, elem) { try { var i = document.createElement(elem); i.width = '1'; i.height = '1'; i.style.display = 'none'; i.src = url; AdGlare._head.appendChild(i); } catch(e) {} }, loadTrackingPixels: function(t) { try { var i; for(i in t) { this.loadPixel(t[i].url, t[i].elem); } } catch(e) {} }, loadAdGlareCallback: function(callbackData) { if(!callbackData) return; try { if(window[callbackData.functionName]) { window[callbackData.functionName](callbackData.data); } } catch(e) {} }, setHTML: function(html,zID) { var obj = document.getElementById('zone'+zID); if(!obj) return; obj.innerHTML = html; }, appendToContainer: function(id,html) { var obj = document.getElementById(id); if(!obj) return; obj.innerHTML = ''; obj.appendChild(html); }, refreshZone: function(url,zID,timeout,max) { setTimeout(function(){ AdGlare._zonerefresh[zID] = (AdGlare._zonerefresh[zID]+1) || 1; if(AdGlare._zonerefresh[zID] > max) return; AdGlare.loadJS(url); }, timeout); }, getIframeDoc: function(id) { var o = document.getElementById(id); if(!o) return false; var d = o.contentDocument ? o.contentWindow.document : o.contentDocument || o.document; return d; }, writeToIframe: function(id,content) { var d = this.getIframeDoc(id); if(!d) return false; d.open(); d.write(content); d.close(); return true; }, hideElement: function(id) { try { for(i=0; i<3; i++) { if(i==0) var o = document.getElementById(id); if(i==1) var o = parent.document.getElementById(id); if(i==2) var o = parent.parent.document.getElementById(id); if(!o) continue; o.style.display = 'none'; if(o.parentNode) o.parentNode.removeChild(o); } } catch(e) {} }, inIframe: function() { try { return window.self !== window.top; } catch (e) { return true; } }, VBMeasurable: function() { var a = true; var b = ((document.visibilityState) ? true : false); var c = ((this.inIframe()) ? false : true); return ((a && b && c) ? 1 : 0); }, CL_timers: [], CL_started: [], CL_lastActiveElementID: [], CL_urls: [], CL_done: [], CL_ifrmcb: [], CLInit: function(ifrmID,token,redirect_url,autoClickTracking) { AdGlare.CL_urls[token] = redirect_url; AdGlare.CL_started[token] = Date.now(); AdGlare.CL_timers[token] = window.setInterval(function(){AdGlare.CLMeasure(ifrmID,token,autoClickTracking);},1000); }, CLMeasure: function(ifrmID,token,autoClickTracking) { try { var bool_fire = false; var elem = document.activeElement; if(elem && elem.tagName == 'IFRAME'){ if(elem.id == ifrmID) { var diff = ((parseInt(Date.now()) - parseInt(AdGlare.CL_started[token])) / 1000); if(diff>5) { if(AdGlare.CL_lastActiveElementID[token] != elem.id) { bool_fire = true; } } else { if(parent) parent.focus(); } } } AdGlare.CL_lastActiveElementID[token] = elem.id || ''; if(AdGlare.CL_ifrmcb[token]==1) bool_fire = true; if(bool_fire) { if(!AdGlare.CL_done[token]) { AdGlare.CL_done[token] = 1; window.clearInterval(AdGlare.CL_timers[token]); if(autoClickTracking==true) AdGlare.loadPixel(AdGlare.CL_urls[token]+'&log=1','img'); AdGlare.CLCallbackFire(token); } } } catch(e) {} }, CLCallback_clickPixels: [], CLCallback_done: [], CLSetClickPixels: function(token,clickPixels) { if(clickPixels=='') return; AdGlare.CLCallback_clickPixels[token] = clickPixels; }, CLCallbackFire: function(token) { if(!AdGlare.CLCallback_done[token]) { AdGlare.CLCallback_done[token] = 1; if(AdGlare.CLCallback_clickPixels[token]!==undefined && AdGlare.CLCallback_clickPixels[token]!='') { try { for(i in AdGlare.CLCallback_clickPixels[token]) { AdGlare.loadPixel(AdGlare.CLCallback_clickPixels[token][i].url, AdGlare.CLCallback_clickPixels[token][i].elem); } } catch(e) {} } } } }}})();
(function(){ if(typeof window.AdGlareVis == 'undefined') { window.AdGlareVis = { hasLoaded: [], delayChecks: [], delayChecksTimers: [], visTimers: [], visBlock: function(zID,func) { var obj = document.getElementById('zone'+zID); if(!obj) { window.setTimeout(function(){ AdGlareVis.visBlock(zID, func); },100); return; } this.hasLoaded[zID] = false; if(window.addEventListener) { a = ['scroll','load','resize','touchmove']; for(i in a) window.addEventListener(a[i], function(){AdGlareVis.visCallback(obj,zID,func);}, false); } else if(window.attachEvent) { a = ['onscroll','onload','onresize','ontouchmove']; for(i in a) window.attachEvent(a[i], function(){AdGlareVis.visCallback(obj,zID,func);}); } this.visTimers[zID] = window.setInterval(function(){ AdGlareVis.visCallback(obj,zID,func); },1000); this.visCallback(obj,zID,func); }, visCallback: function(obj,zID,func) { if(AdGlareVis.delayChecks[zID]==1) { window.clearTimeout(AdGlareVis.delayChecksTimers[zID]); AdGlareVis.delayChecksTimers[zID] = window.setTimeout(function(){ AdGlareVis.visCallback(obj,zID,func); },110); return false; } try { AdGlareVis.delayChecks[zID]=1; window.setTimeout(function(){ AdGlareVis.delayChecks[zID]=0; },100); if(this.hasLoaded[zID] == true) { return; } if(this.isVisible(obj) || AdGlare.inIframe()) { this.hasLoaded[zID] = true; window.clearInterval(this.visTimers[zID]); this.visTimers[zID] = null; func(); } } catch(e) { return true; } }, isVisible: function(el) { var rect = el.getBoundingClientRect(), view = {height: window.innerHeight, width: window.innerWidth}; if (!this.isInViewport(rect, view) || !this.isVisibleByStyling(el)) return !1; return !0; }, percentage: function(el) { if(this.isVisible===false) return 0; var rect = el.getBoundingClientRect(), view = {height: window.innerHeight, width: window.innerWidth}, vh, vw; var res = (rect.top >= 0 ? vh = Math.min(rect.height, view.height - rect.top) : rect.bottom > 0 && (vh = Math.min(view.height, rect.bottom)),rect.left >= 0 ? vw = Math.min(rect.width, view.width - rect.left) : rect.right > 0 && (vw = Math.min(view.width, rect.right)), vh * vw / (rect.height * rect.width)); if(isNaN(res)) return 0; if(res<0) res = 0; return Math.round(res*100); }, isVisibleByStyling: function(el) { if (!el || !el.parentNode) return !1; var style = this.computedStyle(el), vis = this.styleProperty(style, 'visibility'); return 'hidden' === vis || 'collapse' === vis ? !1 : this.isDisplayed(el, style); }, isInViewport: function(rect, viewport) { return !rect || rect.width < 0 || rect.height < 0 ? !1 : rect.bottom > 0 && rect.right > 0 && rect.top < viewport.height && rect.left < viewport.width; }, computedStyle: function(el) { return window.getComputedStyle(el, null); }, styleProperty: function(style, property) { return style.getPropertyValue(property); }, isDisplayed: function(el, style) { style || (style = this.computedStyle(el)); var display = this.styleProperty(style, 'display'); if ('none' === display) return !1; var parent = el.parentNode; return (parent && 1 === parent.nodeType) ? this.isDisplayed(parent) : !0; }, VB_timers: [], VB_data: [], VB_token: [], VB_done: [], VBInit: function(zID,token) { var obj = document.getElementById('zone'+zID); if(!obj) return; AdGlareVis.VB_token[zID] = token; AdGlareVis.VB_timers[zID] = window.setInterval(function(){AdGlareVis.VBMeasure(zID,token);},1000); }, VBMeasure: function(zID,token) { var obj = document.getElementById('zone'+zID); if(!obj) return; var p = AdGlareVis.percentage(obj); var v = AdGlareVis.isVisible(obj); if(window.AdGlareAlwaysOnScreen) if(AdGlareAlwaysOnScreen._data.zID==1) {p = 100; v=true;} var s = document.visibilityState; if(!s) return; if(AdGlareVis.VB_data[zID]) { if(p>=50 && v==true && s=='visible') { if(AdGlareVis.VB_data[zID].perc>=50 && AdGlareVis.VB_data[zID].vis==true && AdGlareVis.VB_data[zID].state=='visible') { if(!AdGlareVis.VB_done[token]) { if(AdGlareVis.VB_token[zID]) { AdGlareVis.VB_done[token] = 1; window.clearInterval(AdGlareVis.VB_timers[zID]); AdGlare.loadPixel('https://visicommedia.engine.adglare.net/vb?data='+AdGlareVis.VB_token[zID],'img'); return; } } } } } AdGlareVis.VB_data[zID] = {'perc':p,'vis':v,'state':s}; } }}})();
(function(){ if(typeof window.AdGlareBase64 == 'undefined') { window.AdGlareBase64 = { _keyStr : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", encode: function(input) { var output = ""; var chr1, chr2, chr3, enc1, enc2, enc3, enc4; var i = 0; try { input = this._utf8_encode(input); } catch(e) { console.log('AG Error: '+e); console.log(e); } while (i < input.length) { chr1 = input.charCodeAt(i++); chr2 = input.charCodeAt(i++); chr3 = input.charCodeAt(i++); enc1 = chr1 >> 2; enc2 = ((chr1 & 3) << 4) | (chr2 >> 4); enc3 = ((chr2 & 15) << 2) | (chr3 >> 6); enc4 = chr3 & 63; if (isNaN(chr2)) { enc3 = enc4 = 64; } else if (isNaN(chr3)) { enc4 = 64; } output += this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) + this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4); } return output; }, decode: function(input) { var output = ""; var chr1, chr2, chr3; var enc1, enc2, enc3, enc4; var i = 0; input = input.replace(/[^A-Za-z0-9\+\/\=]/g, ""); while (i < input.length) { enc1 = this._keyStr.indexOf(input.charAt(i++)); enc2 = this._keyStr.indexOf(input.charAt(i++)); enc3 = this._keyStr.indexOf(input.charAt(i++)); enc4 = this._keyStr.indexOf(input.charAt(i++)); chr1 = (enc1 << 2) | (enc2 >> 4); chr2 = ((enc2 & 15) << 4) | (enc3 >> 2); chr3 = ((enc3 & 3) << 6) | enc4; output += String.fromCharCode(chr1); if (enc3 != 64) { output += String.fromCharCode(chr2); } if (enc4 != 64) { output += String.fromCharCode(chr3); } } try { output = this._utf8_decode(output); } catch(e) { console.log('AG Error: '+e); console.log(e); } return output; }, _utf8_encode: function(string) { return AdGlareBase64.AdGlareUnescape(encodeURIComponent(string)); }, _utf8_decode: function(utftext) { return decodeURIComponent(AdGlareBase64.AdGlareEscape(utftext)); }, AdGlareEscapeHash: function(input) { var ret = AdGlareBase64.AdGlareEscapeHash[input]; if(!ret) { if(input.length - 1) { ret = String.fromCharCode(parseInt(input.substring(input.length - 3 ? 2 : 1),16)); } else { var code = input.charCodeAt(0); ret = code < 256 ? "%" + (0 + code.toString(16)).slice(-2).toUpperCase() : "%u" + ("000" + code.toString(16)).slice(-4).toUpperCase(); } AdGlareBase64.AdGlareEscapeHash[ret] = input; AdGlareBase64.AdGlareEscapeHash[input] = ret; } return ret; }, AdGlareEscape: function(str) { return str.toString().replace(/[^\w @\*\-\+\.\/]/g, function(aChar) { return AdGlareBase64.AdGlareEscapeHash(aChar); }); }, AdGlareUnescape: function(str) { return str.toString().replace(/%(u[\da-f]{4}|[\da-f]{2})/gi, function(seq) { return AdGlareBase64.AdGlareEscapeHash(seq); }); } }}})();
(function(){ if(typeof window.AdGlareCaps == 'undefined') { window.AdGlareCaps = { now: Math.round(new Date().getTime()/1000), storageSupport: function() { if(typeof(Storage)==='undefined') return false; try { localStorage.setItem('ag_storageSupport',1); if(localStorage.getItem('ag_storageSupport')==1) return true; } catch(e) {} return false; }, getCaps: function() { var arr_caps = []; if(this.storageSupport() === false) return '-'; try { var agcaps = JSON.parse(localStorage.getItem('agcaps') || JSON.stringify({})); var i; for(i in agcaps) { if(agcaps[i]['exp'] === undefined) delete agcaps[i]; else if(this.now > parseInt(agcaps[i]['exp'])) delete agcaps[i]; else if(agcaps[i]['cur'] >= agcaps[i]['max']) { arr_caps.push(agcaps[i]['cID']); } } arr_caps = arr_caps.reverse(); arr_caps = arr_caps.splice(0,50); localStorage.setItem('agcaps',JSON.stringify(agcaps)); } catch(e) {} if(arr_caps.length==0) return '-'; return '-'+arr_caps.join('-')+'-'; }, increaseCap: function(cID,sec,max,pos) { if(this.storageSupport() === false) return false; try { var agcaps = JSON.parse(localStorage.getItem('agcaps') || JSON.stringify({})); var name = 'cID_'+cID+'_'+pos; if(agcaps[name] === undefined) { agcaps[name] = {}; agcaps[name]['exp'] = (this.now + sec); agcaps[name]['cID'] = cID; agcaps[name]['sec'] = sec; agcaps[name]['max'] = max; agcaps[name]['cur'] = 1; } else { agcaps[name]['cur'] = parseInt(agcaps[name]['cur']) + 1; agcaps[name]['max'] = max; if(agcaps[name]['sec'] != sec) { agcaps[name]['exp'] = (this.now + sec); agcaps[name]['sec'] = sec; } } localStorage.setItem('agcaps',JSON.stringify(agcaps)); } catch(e) {} } }}})();
AdGlare.loadJS('https://visicommedia.engine.adglare.net/?589146370&t=1&tt=1569835226-29a6316a');
